/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package auk.edu.ng.badrs;
import javax.swing.JOptionPane;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
//import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Hp
 */
public class DeathForm extends javax.swing.JFrame {

    /**
     * Creates new form DeathForm
     */
    public DeathForm() {
        initComponents();
        table_update();
        //Centre the form
        //this.setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
      //Declaring Connection and PreparedStatement variables
            Connection con1;
            PreparedStatement st;
            
             private void table_update(){
                int c;
                try {
            Class.forName("com.mysql.jdbc.Driver");
            
          //connecting to database with name badrs
          con1 = DriverManager.getConnection("jdbc:mysql://localhost/badrs", "root", "");
            
            //Inserting into database using SQL Query
            
             st = con1.prepareStatement("SELECT * FROM deathrecord");
             ResultSet rs = st.executeQuery();
             ResultSetMetaData Md = rs.getMetaData();
             c = Md.getColumnCount();
             
             DefaultTableModel Df = (DefaultTableModel)deathRecordTable.getModel();
             
             Df.setRowCount(0);
             while(rs.next()){
                 Vector v2 = new Vector();
                 for(int i=0; i<=c; i++){
                     v2.add(rs.getString("regCenter"));
                     v2.add(rs.getString("town"));
                     v2.add(rs.getString("certNo"));
                     v2.add(rs.getString("LGA"));
                     v2.add(rs.getString("state"));
                     v2.add(rs.getString("causeOfDeath"));
                     v2.add(rs.getString("dateOfReg"));
                     v2.add(rs.getString("fullName"));
                     v2.add(rs.getString("sex"));
                     v2.add(rs.getString("age"));
//                     v2.add(rs.getString("placeOfBirth"));
//                     v2.add(rs.getString("fathersName"));
//                     v2.add(rs.getString("mothersName"));
                     v2.add(rs.getString("placeOfIssue"));
                     v2.add(rs.getString("nameOfRegistrar"));
                     v2.add(rs.getString("date"));
                 }
                 Df.addRow(v2);
             }
             
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BirthForm.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    }    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel12 = new javax.swing.JLabel();
        txtPlaceOfIssue = new javax.swing.JTextField();
        jLabel16 = new javax.swing.JLabel();
        txtNameOfRegistrar = new javax.swing.JTextField();
        txtState = new javax.swing.JTextField();
        jLabel17 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        txtDate = new javax.swing.JTextField();
        txtCauseOfDeath = new javax.swing.JTextField();
        btnUpdate = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        btnDelete = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        txtDateOfReg = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        txtFullName = new javax.swing.JTextField();
        txtSex = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtReg_centre = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtTown = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtLGA = new javax.swing.JTextField();
        btnReset = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        deathRecordTable = new javax.swing.JTable();
        txtAge = new javax.swing.JTextField();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        btnDashboard = new javax.swing.JButton();
        btnLogout = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(2222, 736));
        setResizable(false);

        jLabel12.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel12.setText("PLACE OF ISSUE");

        jLabel16.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel16.setText("NAME OF REGISTRAR");

        jLabel17.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel17.setText("DATE");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel6.setText("STATE");

        btnUpdate.setBackground(new java.awt.Color(51, 204, 0));
        btnUpdate.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnUpdate.setText("UPDATE RECORD");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel7.setText("CAUSE OF DEATH");

        btnDelete.setBackground(new java.awt.Color(255, 153, 0));
        btnDelete.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnDelete.setText("DELETE RECORD");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel8.setText("DATE OF REGISTRATION");

        jLabel9.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel9.setText("FULL NAME");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel10.setText("SEX");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel3.setText("REGISTRATION CENTRE");

        jLabel4.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel4.setText("TOWN");

        jLabel5.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel5.setText("LOCAL GOVERNMENT");

        btnReset.setBackground(new java.awt.Color(255, 153, 0));
        btnReset.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnReset.setText("CLEAR ENTRY");
        btnReset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetActionPerformed(evt);
            }
        });

        btnAdd.setBackground(new java.awt.Color(51, 204, 0));
        btnAdd.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        btnAdd.setText("ADD NEW RECORD");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        jLabel11.setFont(new java.awt.Font("Segoe UI", 1, 12)); // NOI18N
        jLabel11.setText("AGE");

        deathRecordTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Registration_Center", "Town", "Certificate No.", "LGA", "State", "Cause Of Death", "Date_Of_Reg.", "Full_Name", "Sex", "Age", "Place_Of_Issue", "Name_Of_Registrar", "Date"
            }
        ));
        deathRecordTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deathRecordTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(deathRecordTable);

        jPanel1.setBackground(new java.awt.Color(51, 153, 0));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("MANAGE DEATH  RECORD");

        btnDashboard.setBackground(new java.awt.Color(153, 153, 255));
        btnDashboard.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnDashboard.setText("<<DASHBOARD");
        btnDashboard.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDashboardActionPerformed(evt);
            }
        });

        btnLogout.setBackground(new java.awt.Color(255, 51, 51));
        btnLogout.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        btnLogout.setText("LOGOUT>>");
        btnLogout.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLogoutActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(btnDashboard)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 386, Short.MAX_VALUE)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 409, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(219, 219, 219)
                .addComponent(btnLogout)
                .addGap(122, 122, 122))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnLogout, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnDashboard, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 43, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(0, 0, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 134, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(txtNameOfRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(35, 35, 35)
                .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 189, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addContainerGap()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtReg_centre, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtTown, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtLGA, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtCauseOfDeath, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtDateOfReg, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtSex, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(2, 2, 2))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 2, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(layout.createSequentialGroup()
                                        .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 159, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtPlaceOfIssue, javax.swing.GroupLayout.PREFERRED_SIZE, 203, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGap(18, 18, 18)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 876, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(156, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 468, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtNameOfRegistrar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(131, 131, 131))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnReset, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnAdd, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 52, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(90, 90, 90))))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(layout.createSequentialGroup()
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(116, 116, 116)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtReg_centre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtTown, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtLGA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtState, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtCauseOfDeath, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtDateOfReg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtFullName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtAge, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(txtPlaceOfIssue, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(99, 99, 99)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 456, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addContainerGap(181, Short.MAX_VALUE)))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        //UPDATE RECORD
        DefaultTableModel Df = (DefaultTableModel)deathRecordTable.getModel();
        int selectedIndex = deathRecordTable.getSelectedRow();

        try {
            int certNo = Integer.parseInt(Df.getValueAt(selectedIndex, 2).toString());

            //setting variables to update
            String regCenter =  txtReg_centre.getText();
            String town = txtTown.getText();
//            String certNo = txtCertNo.getText();
            String LGA = txtLGA.getText();
            String state = txtState.getText();
            String causeOfDeath = txtCauseOfDeath.getText();
            String dateOfReg = txtDateOfReg.getText();
            String fullName = txtFullName.getText();
            String sex = txtSex.getText();
            String age = txtAge.getText();
//            String placeOfBirth = txtPlaceOfIssue.getText();
//            String fathersName = txtFathersName.getText();
//            String mothersName = txtMothersName.getText();
            String placeOfIssue = txtPlaceOfIssue.getText();
            String nameOfRegistrar = txtNameOfRegistrar.getText();
            String date = txtDate.getText();

            Class.forName("com.mysql.jdbc.Driver");

            //connecting to database with name badrs
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/badrs", "root", "");

            //Inserting into database using SQL Query

            st = con1.prepareStatement("UPDATE deathrecord SET regCenter=?, town=?, LGA=?, state=?, causeOfDeath=?, dateOfReg=?,fullName=?, sex=?, age=?, placeOfIssue=?, nameOfRegistrar=?, date=? WHERE certNo=?");

            //Setting the variables to UPDATE
            //st.setString(0, certNo);
            st.setString(1, regCenter);
            st.setString(2, town);
            st.setString(3, LGA);
            st.setString(4, state);
            st.setString(5, causeOfDeath);
            st.setString(6, dateOfReg);
            st.setString(7, fullName);
            st.setString(8, sex);
            st.setString(9, age);
            //st.setString(10, placeOfBirth);
//            st.setString(11, fathersName);
//            st.setString(12, mothersName);
            st.setString(10, placeOfIssue);
            st.setString(11, nameOfRegistrar);
            st.setString(12, date);
            st.setInt(13, certNo);
            // ResultSet res = st.executeQuery();
            st.executeUpdate();

            JOptionPane.showMessageDialog(this, "Recorded Updated Successfully.");
            table_update();
            // if(res.next()){

                //RESET FIELDS AFTER UPDATING RECORD
                txtReg_centre.setText("");
                txtReg_centre.setText("");
                txtTown.setText("");
                txtLGA.setText("");
                txtState.setText("");
                txtCauseOfDeath.setText("");
                txtDateOfReg.setText("");
                txtFullName.setText("");
                txtSex.setText("");
                txtAge.setText("");
                txtPlaceOfIssue.setText("");
//                txtFathersName.setText("");
//                txtMothersName.setText("");
                txtPlaceOfIssue.setText("");
                txtNameOfRegistrar.setText("");
                txtDate.setText("");
                //set focus to the first field again
                txtReg_centre.requestFocus();

                //}
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BirthForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnUpdateActionPerformed

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        //DELETING SELECTED RECORD FROM THE DATABASE
        DefaultTableModel Df = (DefaultTableModel)deathRecordTable.getModel();
        int selectedIndex = deathRecordTable.getSelectedRow();
        try {
            int certNo = Integer.parseInt(Df.getValueAt(selectedIndex, 2).toString());

            //CONFIRMATION BOX TO DELETE
            int dialogResult = JOptionPane.showConfirmDialog(null, "Do You Want to Delete the Record?", "Warning", JOptionPane.YES_OPTION);
            if(dialogResult == JOptionPane.YES_OPTION){

                //setting variables to update
                String regCenter =  txtReg_centre.getText();
                String town = txtReg_centre.getText();
                //String certNo = txtCertNo.getText();
                String LGA = txtLGA.getText();
                String state = txtState.getText();
                String causeOfDeath = txtCauseOfDeath.getText();
                String dateOfReg = txtDateOfReg.getText();
                String fullName = txtFullName.getText();
                String sex = txtSex.getText();
                String dob = txtAge.getText();
                String placeOfBirth = txtPlaceOfIssue.getText();
//                String fathersName = txtFathersName.getText();
//                String mothersName = txtMothersName.getText();
                String placeOfIssue = txtPlaceOfIssue.getText();
                String nameOfRegistrar = txtNameOfRegistrar.getText();
                String date = txtDate.getText();

                Class.forName("com.mysql.jdbc.Driver");

                //connecting to database with name badrs
                con1 = DriverManager.getConnection("jdbc:mysql://localhost/badrs", "root", "");

                //Inserting into database using SQL Query

                st = con1.prepareStatement("DELETE FROM deathrecord WHERE certNo=?");

                st.setInt(1, certNo);
                // ResultSet res = st.executeQuery();
                st.executeUpdate();
                table_update();
                JOptionPane.showMessageDialog(this, "Recorded Deleted Successfully.");

                // if(res.next()){

                    //RESET FIELDS AFTER UPDATING RECORD
                    txtReg_centre.setText("");
                    txtReg_centre.setText("");
                    txtTown.setText("");
                    txtLGA.setText("");
                    txtState.setText("");
                    txtCauseOfDeath.setText("");
                    txtDateOfReg.setText("");
                    txtFullName.setText("");
                    txtSex.setText("");
                    txtAge.setText("");
                    txtPlaceOfIssue.setText("");
//                    txtFathersName.setText("");
//                    txtMothersName.setText("");
                    txtPlaceOfIssue.setText("");
                    txtNameOfRegistrar.setText("");
                    txtDate.setText("");
                    //set focus to the first field again
                    txtReg_centre.requestFocus();

                    //}
            }
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BirthForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnResetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetActionPerformed
        // TODO add your handling code here:
        //RESET CODE
        txtReg_centre.setText("");
        txtReg_centre.setText("");
        txtTown.setText("");
        txtLGA.setText("");
        txtState.setText("");
        txtCauseOfDeath.setText("");
        txtDateOfReg.setText("");
        txtFullName.setText("");
        txtSex.setText("");
        txtAge.setText("");
        txtPlaceOfIssue.setText("");
//        txtFathersName.setText("");
//        txtMothersName.setText("");
        txtPlaceOfIssue.setText("");
        txtNameOfRegistrar.setText("");
        txtDate.setText("");

    }//GEN-LAST:event_btnResetActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        //setting variables
        // Connection dbconn = DBConnection.connectDB();
        String regCenter =  txtReg_centre.getText();
        String town = txtTown.getText();
        //String certNo = txtCertNo.getText();
        String LGA = txtLGA.getText();
        String state = txtState.getText();
        String causeOfDeath = txtCauseOfDeath.getText();
        String dateOfReg = txtDateOfReg.getText();
        String fullName = txtFullName.getText();
        String sex = txtSex.getText();
        String age = txtAge.getText();
        //String placeOfBirth = txtPlaceOfIssue.getText();
//        String fathersName = txtFathersName.getText();
//        String mothersName = txtMothersName.getText();
        String placeOfIssue = txtPlaceOfIssue.getText();
        String nameOfRegistrar = txtNameOfRegistrar.getText();
        String date = txtDate.getText();
        //connecting to database
        try {
            Class.forName("com.mysql.jdbc.Driver");

            //connecting to database with name badrs
            con1 = DriverManager.getConnection("jdbc:mysql://localhost/badrs", "root", "");

            //Inserting into database using SQL Query

            st = con1.prepareStatement("INSERT INTO deathrecord(regCenter, town, LGA, state, causeOfDeath, dateOfReg, fullName, sex, age, placeOfIssue, nameOfRegistrar, date) VALUES(?,?,?,?,?,?,?,?,?,?,?,?)");

            //Setting the variables to insert
            //st.setString(0, certNo);
            st.setString(1, regCenter);
            st.setString(2, town);
            st.setString(3, LGA);
            st.setString(4, state);
            st.setString(5, causeOfDeath);
            st.setString(6, dateOfReg);
            st.setString(7, fullName);
            st.setString(8, sex);
            st.setString(9, age);
//            st.setString(10, placeOfBirth);
//            st.setString(11, fathersName);
//            st.setString(12, mothersName);
            st.setString(10, placeOfIssue);
            st.setString(11, nameOfRegistrar);
            st.setString(12, date);
            // ResultSet res = st.executeQuery();
            st.executeUpdate();

            JOptionPane.showMessageDialog(this, "Recorded Added Successfully.");
            table_update();
            // if(res.next()){

                //RESET FIELDS
               // txtReg_centre.setText("");
                txtReg_centre.setText("");
                txtTown.setText("");
                txtLGA.setText("");
                txtState.setText("");
                txtCauseOfDeath.setText("");
                txtDateOfReg.setText("");
                txtFullName.setText("");
                txtSex.setText("");
                txtAge.setText("");
//                txtPlaceOfIssue.setText("");
//                txtFathersName.setText("");
//                txtMothersName.setText("");
                txtPlaceOfIssue.setText("");
                txtNameOfRegistrar.setText("");
                txtDate.setText("");
                //set focus to the first field again
                txtReg_centre.requestFocus();

                //}
        } catch (ClassNotFoundException | SQLException ex) {
            Logger.getLogger(BirthForm.class.getName()).log(Level.SEVERE, null, ex);
        }

    }//GEN-LAST:event_btnAddActionPerformed

    private void deathRecordTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deathRecordTableMouseClicked
        // TODO add your handling code here:
        //EDITING FIELDS ON MOUSE CLICK OVER RECORD
        DefaultTableModel Df = (DefaultTableModel)deathRecordTable.getModel();
        int selectedIndex = deathRecordTable.getSelectedRow();

        // txtReg_centre.setText(Df.getValueAt(selectedIndex, 0).toString());

        txtReg_centre.setText((String) Df.getValueAt(selectedIndex, 0));
//        txtReg_centre.setText((String) Df.getValueAt(selectedIndex, 1));
        txtTown.setText((String) Df.getValueAt(selectedIndex, 1));
        txtLGA.setText((String) Df.getValueAt(selectedIndex, 3));
        txtState.setText((String) Df.getValueAt(selectedIndex, 4));
        txtCauseOfDeath.setText((String) Df.getValueAt(selectedIndex, 5));
        txtDateOfReg.setText((String) Df.getValueAt(selectedIndex, 6));
        txtFullName.setText((String) Df.getValueAt(selectedIndex, 7));
        txtSex.setText((String) Df.getValueAt(selectedIndex, 8));
        txtAge.setText((String) Df.getValueAt(selectedIndex, 9));
//        txtPlaceOfIssue.setText((String) Df.getValueAt(selectedIndex, 10));
//        txtFathersName.setText((String) Df.getValueAt(selectedIndex, 11));
//        txtMothersName.setText((String) Df.getValueAt(selectedIndex, 12));
        txtPlaceOfIssue.setText((String) Df.getValueAt(selectedIndex, 10));
        txtNameOfRegistrar.setText((String) Df.getValueAt(selectedIndex, 11));
        txtDate.setText((String) Df.getValueAt(selectedIndex, 12));

    }//GEN-LAST:event_deathRecordTableMouseClicked

    private void btnDashboardActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDashboardActionPerformed
        // TODO add your handling code here:
        //Click to go back to Dashboard
        dispose();
        Dashboard d = new Dashboard();
        d.setTitle("Dashboard");
        d.setVisible(true);
    }//GEN-LAST:event_btnDashboardActionPerformed

    private void btnLogoutActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLogoutActionPerformed
        // TODO add your handling code here:
        //Logout Code
        dispose();
        Login login = new Login();
        login.setTitle("Login Page");
        login.setVisible(true);
    }//GEN-LAST:event_btnLogoutActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(DeathForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(DeathForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(DeathForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(DeathForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new DeathForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDashboard;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnLogout;
    private javax.swing.JButton btnReset;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JTable deathRecordTable;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField txtAge;
    private javax.swing.JTextField txtCauseOfDeath;
    private javax.swing.JTextField txtDate;
    private javax.swing.JTextField txtDateOfReg;
    private javax.swing.JTextField txtFullName;
    private javax.swing.JTextField txtLGA;
    private javax.swing.JTextField txtNameOfRegistrar;
    private javax.swing.JTextField txtPlaceOfIssue;
    private javax.swing.JTextField txtReg_centre;
    private javax.swing.JTextField txtSex;
    private javax.swing.JTextField txtState;
    private javax.swing.JTextField txtTown;
    // End of variables declaration//GEN-END:variables
}
